Starting audit...
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:1:8: Unused import - Player.PlayerDeck. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:2:8: Unused import - com.fasterxml.jackson.databind.ObjectMapper. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:3:8: Unused import - com.fasterxml.jackson.databind.node.ArrayNode. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:4:8: Unused import - fileio.ActionsInput. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:6:8: Unused import - java.lang.reflect.Array. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\commands.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:1:9: Name 'GwentStone' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:8:8: Unused import - Systems.Commands. [UnusedImports]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:13:14: Name 'gwentStone' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:14:5: Class 'gwentStone' looks like designed for extension (can be subclassed), but the method 'start' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'gwentStone' final or making the method 'start' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:14:28: Parameter inputdata should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:17:13: '(' is followed by whitespace. [ParenPad]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:17:63: ')' is preceded with whitespace. [ParenPad]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:22:23: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:22:54: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:24:23: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:24:54: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:43: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:46: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:52: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\GwentStone\gwentStone.java:55: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\main\Main.java:74:15: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\main\Main.java:74:15: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:7:14: Name 'card' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:18:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:22:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:26:6: Class 'card' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:30:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:34:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:38:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:42:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:46:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:50:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:54:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:58:5: Class 'card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\card.java:79:17: Parameter card should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:5:14: Name 'cardChampion' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:5:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:6:29: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:6:29: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:7:25: Parameter card should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardChampion.java:12:5: Class 'cardChampion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'cardChampion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:5:14: Name 'cardMinion' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:5:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:9:5: Class 'cardMinion' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'cardMinion' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:14:5: Class 'cardMinion' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'cardMinion' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:15:33: Parameter attackDamage should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:20:5: Class 'cardMinion' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'cardMinion' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:24:5: Class 'cardMinion' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'cardMinion' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:25:27: Parameter health should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\cardMinion.java:28:23: Parameter card should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:5:14: Name 'decks' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:13:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:17:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:21:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'getNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'getNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:25:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'setNrDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'setNrDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:29:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'getDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'getDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:33:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'setDecks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'setDecks' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\decks.java:37:5: Class 'decks' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'decks' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:1:17: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:7:22: Name 'player' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:11:33: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:12:33: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:12:33: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:13:26: Name 'Champion' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:15:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:19:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:19:38: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:23:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'getNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'getNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:27:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'setNrCardsInDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'setNrCardsInDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:27:42: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:31:27: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:31:42: Parameter nrCardsInDeck should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:31:61: Parameter decks should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:26: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:26: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:28: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:30: '<' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:30: '<' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:44: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:34:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:35:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:35:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:35:48: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:35:48: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:37:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:42:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:44:34: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:45:50: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:46:60: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:47:42: '+' should be on a new line. [OperatorWrap]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:51:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'getDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'getDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:51:30: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:55:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'setDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'setDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:55:33: Parameter deck should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:55:43: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:59:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'getHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'getHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:59:30: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:63:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'setHand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'setHand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:63:33: Parameter hand should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:63:43: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:67:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'getChampion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'getChampion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:71:13: Class 'player' looks like designed for extension (can be subclassed), but the method 'setChampion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'player' final or making the method 'setChampion' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\player.java:71:37: Parameter champion should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:5:12: Variable 'command' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:5:20: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:6:9: Name 'PlayerIdx' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:6:9: Variable 'PlayerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:7:18: Variable 'output' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:9:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:13:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:13:28: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:17:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:21:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:21:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:25:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:29:5: Class 'PlayerChampion' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerChampion' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:29:27: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:33:27: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:33:43: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerChampion.java:33:58: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:6:12: Variable 'command' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:6:20: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:7:9: Name 'PlayerIdx' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:7:9: Variable 'PlayerIdx' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:8:21: Variable 'output' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:10:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:14:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:14:28: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:18:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:22:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:22:30: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:26:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:30:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:30:27: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:34:23: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:34:39: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:34:54: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerDeck.java:40:5: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:1:9: Name 'Player' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:5:12: Variable 'command' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:6:9: Variable 'output' must be private and have accessor methods. [VisibilityModifier]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:8:5: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:12:5: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'setCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'setCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:12:28: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:16:5: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:20:5: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:20:27: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:24:23: Parameter command should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Player\PlayerTurn.java:24:39: Parameter output should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:1:9: Name 'Systems' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:3:14: Using the '.*' form of import should be avoided - Player.*. [AvoidStarImport]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:10:5: Class 'Commands' looks like designed for extension (can be subclassed), but the method 'getPlayerDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commands' final or making the method 'getPlayerDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:10:37: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:10:52: Parameter deck should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:10:62: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:17:5: Class 'Commands' looks like designed for extension (can be subclassed), but the method 'getPlayerHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commands' final or making the method 'getPlayerHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:17:41: Parameter playerIdx should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:17:56: Parameter champion should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:22:5: Class 'Commands' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Commands' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Commands.java:22:37: Parameter playerTurn should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\functions.java:1:9: Name 'Systems' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\functions.java:3:14: Name 'functions' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:1:9: Name 'Systems' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:5: Class 'GetCommands' looks like designed for extension (can be subclassed), but the method 'GetCommands' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GetCommands' final or making the method 'GetCommands' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:22: Method Name 'GetCommands' must not equal the enclosing class name. [MethodName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:22: Name 'GetCommands' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:34: Parameter game should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:50: Parameter p1 should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:61: Parameter p2 should be final. [FinalParameters]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:10:71: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:11:34: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:11:34: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:11:54: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:12:22: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:12:22: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:13:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:13:12: '(' is followed by whitespace. [ParenPad]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:14:9: '{' at column 9 should be on the previous line. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:14:9: '{' at column 9 should have line break after. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:14:27: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:14:27: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:15:32: '=' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:16:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:13: '{' at column 13 should be on the previous line. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:13: '{' at column 13 should have line break after. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:18: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:42: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:17:42: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:20:13: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:24:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:25:13: '{' at column 13 should be on the previous line. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:26:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:26:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:26:41: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:26:41: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:29:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:33:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:34:13: '{' at column 13 should be on the previous line. [LeftCurly]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:35:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:35:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:35:59: '==' is not followed by whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:35:59: '==' is not preceded with whitespace. [WhitespaceAround]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\GetCommands.java:37:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] E:\POO\tema1\oop-asignments\teme\tema\.\src\Systems\Mehods.java:1:9: Name 'Systems' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
Audit done.
Checkstyle ends with 219 errors.
